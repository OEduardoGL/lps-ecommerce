version: "3.9"

services:
  db:
    image: postgres:16
    container_name: lps-db
    environment:
      POSTGRES_USER: lps
      POSTGRES_PASSWORD: lps_pass
      POSTGRES_DB: lps_ecommerce
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 10

  catalog:
    build: .
    container_name: lps-catalog
    command: ["node", "services/catalog/server.js"]
    environment:
      PORT: 4101
      PGHOST: db
      PGPORT: 5432
      PGUSER: lps
      PGPASSWORD: lps_pass
      PGDATABASE: lps_ecommerce
    ports:
      - "4101:4101"
    depends_on:
      db:
        condition: service_healthy

  users:
    build: .
    container_name: lps-users
    command: ["node", "services/users/server.js"]
    environment:
      PORT: 4102
      PGHOST: db
      PGPORT: 5432
      PGUSER: lps
      PGPASSWORD: lps_pass
      PGDATABASE: lps_ecommerce
    ports:
      - "4102:4102"
    depends_on:
      db:
        condition: service_healthy

  orders:
    build: .
    container_name: lps-orders
    command: ["node", "services/orders/server.js"]
    environment:
      PORT: 4103
      PGHOST: db
      PGPORT: 5432
      PGUSER: lps
      PGPASSWORD: lps_pass
      PGDATABASE: lps_ecommerce
    ports:
      - "4103:4103"
    depends_on:
      db:
        condition: service_healthy

  recommendation:
    build: .
    container_name: lps-recommendation
    command: ["node", "services/recommendation/server.js"]
    environment:
      PORT: 4104
      PGHOST: db
      PGPORT: 5432
      PGUSER: lps
      PGPASSWORD: lps_pass
      PGDATABASE: lps_ecommerce
    ports:
      - "4104:4104"
    depends_on:
      db:
        condition: service_healthy

volumes:
  db-data:
